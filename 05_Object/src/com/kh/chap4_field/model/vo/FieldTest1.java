package com.kh.chap4_field.model.vo;

public class FieldTest1 {

	/*
	 * 변수구분
	 * - 전역변수 : 클래스 영역에 바로 선언하는 변수 -> 클래스 내에서면 어디서든 사용가능
	 * - 지역변수 : 클래스 영역 내에서 특정 중괄호{} 영역에 선언한 변수(선언한 영역에서만 사용가능)
	 * 			ex) 메서드영역, if문 영역, for문 영역..
	 * 
	 * 1. 전역변수(2가지로 구분됨)
	 *  - 필드 == 인스턴스변수 == 멤버변수
	 * 		생성시점 : new 연산자를 통해 해당 객체가 생성하는 순간 메모리 영역에 할당 
	 * 		소멸시점 : 객체 소멸시 같이 소멸됨
	 *  
	 *  - static변수 == 클래스변수 : "static"이라는 예약어가 있냐없냐에 따라 필드나 static변수로 구분된다
	 *  	생성시점 : 프로그램 실행과 동시에 메모리 영역(static영역)에 할당
	 *  	소멸시점 : 프로그램 종료될때 소멸
	 * 
	 * 
	 * 2. 지역변수
	 * 		생성시점 : 프로그램을 실행하다가 특정 줄괄호{}구역을 만났을때 메모리 영역(stack영역)에 할당
	 * 		소멸시점 : 중괄호{}구역이 끝났을때 소멸
	 * 
	 * */
	
	
//	private int global2;		// <- 필드(전역변수)
//	private static int global; 	// <- static변수(전역변수)
	
	
	// 변수 선언 위치에 따른 구분(전역변수, 지역변수)
	
	private int global; 	// 전역변수(필드)
	
	public void test(int num) {	// 매개변수 == 지역변수
		
		// 지역변수(메서드 영역 내에 생성) -> 지역변수는 접근제한자를 붙일 수 없다.
		//public int local = 100;	
		
		int local = 100;			// 지역변수에는 항상 값을 초기화 시켜줘야 한다.
		
		
		if(true) {
			int a = 0; 	// 지역변수
			System.out.println(a); 	// 0
		}	// int a 소멸;
		
		/*
		 * 필드에 값을 초기화하지 않아도 에러가 발생하지 않는 이유
		 * 필드의 생성시점 == 객체의 생성시점, 객체생성시 초기화되지 않은 필드들은
		 * jvm이 자동으로 기본값을 대입해주기 때문에 항상 값이 들어가 있다.
		 * */
		System.out.println(global);	// 위 /* */ 안의 내용 참조
		
		System.out.println(num);	//현재메서드 test(int num) 호출시에는 반드시 값을 넘겨줘야 
									//호출이 가능하기 때문에 num에는 반드시 어떤 값이든 들어있어야함
		
		System.out.println(local);	// 값을 초기화하지 않으면 에러발생(지역변수는 항상 값을 초기화 해야함)
		
		
	}
	
	
	
	
	
	
	
	
	
	
	
}
